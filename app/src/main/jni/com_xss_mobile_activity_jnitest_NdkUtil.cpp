//
// Created by xss on 2016/11/22.
//
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <stdio.h>
#include <stdlib.h>
#include <Android/log.h>
#include "com_xss_mobile_activity_jnitest_NdkUtil.h"

#define TAG "tag_myJniTest"
#define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG, TAG, __VA_ARGS__)  // 定义DEBUG类型
#define LOGI(...) __android_log_print(ANDROID_LOG_INFO, TAG, __VA_ARGS__)   // 定义INFO类型
#define LOGW(...) __android_log_print(ANDROID_LOG_WARN, TAG, __VA_ARGS__)   // 定义WARN类型
#define LOGE(...) __android_log_print(ANDROID_LOG_ERROR, TAG, __VA_ARGS__)  // 定义ERROR类型

#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_xss_mobile_activity_jnitest_NdkUtil
 * Method:    getCLanguageString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_xss_mobile_activity_jnitest_NdkUtil_getCLanguageString
        (JNIEnv *env, jclass clazz) {
    return env->NewStringUTF("Hello, world!");
}

JNIEXPORT void JNICALL Java_com_xss_mobile_activity_jnitest_NdkUtil_callJavaMethodFromJni(JNIEnv *env, jclass clazz) {
    LOGI("%s", "-----begin C-----");
    LOGI("%s", "This is at C");
    // 得到JniHandler java类
    jclass jniHandle = env->FindClass("com/xss/mobile/activity/jnitest/JniHandle");
    if (NULL == jniHandle) {
        LOGI("%s", "Cant find JniHandle");
    }
    // 通过GetStaticMethodID获取静态方法
    jmethodID method = env->GetStaticMethodID(jniHandle, "getStringFromStatic", "()Ljava/lang/String;");
    if (NULL == method) {
        env->DeleteLocalRef(jniHandle);  // 释放局部引用
        LOGI("%s", "Cant find method getStringFromStatic() from JniHandle");
        return;
    }
    jstring result = (jstring)env->CallStaticObjectMethod(jniHandle, method);
    const char *resultChar = env->GetStringUTFChars(result, NULL);
    env->DeleteLocalRef(jniHandle);
    env->DeleteLocalRef(result);
    LOGI("%s", resultChar);
    LOGI("%s", "-----end C-----");
}

#ifdef __cplusplus
}
#endif


